//
// Generated file, do not edit! Created by opp_msgc 4.1 from linklayer/EtherFrameVlans.msg.
//

#ifndef _ETHERFRAMEVLANS_M_H_
#define _ETHERFRAMEVLANS_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0401
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include <inttypes.h>
	#include "EtherFrame_m.h"
// }}



/**
 * Class generated from <tt>linklayer/EtherFrameVlans.msg</tt> by opp_msgc.
 * <pre>
 * packet EthernetDot1QFrame extends EtherFrame
 * {
 *     uint16_t vlanType;
 *     uint16_t vlanID;
 *     uint16_t etherType;
 * }
 * </pre>
 */
class EthernetDot1QFrame : public ::EtherFrame
{
  protected:
    uint16_t vlanType_var;
    uint16_t vlanID_var;
    uint16_t etherType_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const EthernetDot1QFrame&);

  public:
    EthernetDot1QFrame();
    EthernetDot1QFrame(const EthernetDot1QFrame& other);
    virtual ~EthernetDot1QFrame();
    EthernetDot1QFrame& operator=(const EthernetDot1QFrame& other);
    virtual EthernetDot1QFrame *dup() const {return new EthernetDot1QFrame(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual uint16_t getVlanType() const;
    virtual void setVlanType(uint16_t vlanType_var);
    virtual uint16_t getVlanID() const;
    virtual void setVlanID(uint16_t vlanID_var);
    virtual uint16_t getEtherType() const;
    virtual void setEtherType(uint16_t etherType_var);
};

inline void doPacking(cCommBuffer *b, EthernetDot1QFrame& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, EthernetDot1QFrame& obj) {obj.parsimUnpack(b);}


#endif // _ETHERFRAMEVLANS_M_H_
